package(default_visibility = ["//visibility:public"])

load("@bazel_skylib//:bzl_library.bzl", "bzl_library")

cc_binary(
    name = "gentest_codegen",
    srcs = [
        "tools/src/main.cpp",
        "tools/src/parse_core.cpp",
        "tools/src/parse.cpp",
        "tools/src/discovery.cpp",
        "tools/src/mock_discovery.cpp",
        "tools/src/validate.cpp",
        "tools/src/emit.cpp",
        "tools/src/render_mocks.cpp",
        "tools/src/type_kind.cpp",
        "tools/src/render.cpp",
        "tools/src/tooling_support.cpp",
    ],
    copts = [
        "-std=c++23",
        "-Iinclude",
        "-DFMT_HEADER_ONLY",
        "-Wno-unknown-attributes",
        "-Wno-attributes",
    ],
    linkopts = [
        "-L/usr/local/lib",
        "-lclang-cpp",
        "-Wl,-rpath,/usr/local/lib",
        "-pthread",
    ],
)

def gentest_suite(name, suite):
    gen_name = "gen_{}_code".format(suite)
    outs = [
        "{}__cases_test_impl.cpp".format(suite),
        "{}__cases_mock_registry.hpp".format(suite),
        "{}__cases_mock_impl.hpp".format(suite),
    ]
    native.genrule(
        name = gen_name,
        srcs = ["tests/{}/cases.cpp".format(suite)],
        tools = [":gentest_codegen"],
        outs = outs,
        cmd = (
            "$(location :gentest_codegen) "
            + "--output $(location {0}) --entry gentest::run_all_tests "
            + "--mock-registry $(location {1}) --mock-impl $(location {2}) "
            + "$(location tests/{3}/cases.cpp) -- -std=c++23 -Iinclude -Itests"
        ).format(outs[0], outs[1], outs[2], suite),
    )

    cc_test(
        name = name,
        srcs = [
            "tests/support/test_entry.cpp",
            ":{}".format(gen_name),
        ],
        copts = [
            "-std=c++23",
            "-Iinclude",
            "-Itests",
            "-DFMT_HEADER_ONLY",
            "-DGENTEST_MOCK_REGISTRY_PATH=cases_mock_registry.hpp",
            "-DGENTEST_MOCK_IMPL_PATH=cases_mock_impl.hpp",
            "-Wno-unknown-attributes",
            "-Wno-attributes",
        ],
    )

gentest_suite(name = "gentest_unit_tests", suite = "unit")
gentest_suite(name = "gentest_integration_tests", suite = "integration")
gentest_suite(name = "gentest_skiponly_tests", suite = "skiponly")
gentest_suite(name = "gentest_fixtures_tests", suite = "fixtures")
gentest_suite(name = "gentest_templates_tests", suite = "templates")
gentest_suite(name = "gentest_mocking_tests", suite = "mocking")

