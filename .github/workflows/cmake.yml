name: CMake (Linux)

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup CMake
        uses: actions/setup-cmake@v3
        with:
          cmake-version: '3.31.x'

      - name: Setup LLVM (20)
        uses: llvm/actions/setup-llvm@v1
        with:
          version: '20'

      - name: Install deps (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y ninja-build libfmt-dev

      - name: Configure (Debug + system LLVM/Clang)
        shell: bash
        run: |
          LLVM_CMAKE_DIR=$(llvm-config-20 --cmakedir)
          CLANG_CMAKE_DIR=/usr/lib/llvm-20/lib/cmake/clang
          cmake -G Ninja -S . -B build/ci \
            -DCMAKE_BUILD_TYPE=Debug \
            -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \
            -DLLVM_DIR="$LLVM_CMAKE_DIR" \
            -DClang_DIR="$CLANG_CMAKE_DIR"

      - name: Build
        run: cmake --build build/ci -j 2

      - name: Test
        run: ctest --test-dir build/ci --output-on-failure -j 2

  build-test-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup CMake
        uses: actions/setup-cmake@v3
        with:
          cmake-version: '3.31.x'

      - name: Setup LLVM (20)
        uses: llvm/actions/setup-llvm@v1
        with:
          version: '20'

      - name: Install deps (Homebrew)
        run: |
          brew update
          brew install ninja fmt

      - name: Configure (Debug using Homebrew LLVM)
        shell: bash
        run: |
          LLVM_PREFIX=$(brew --prefix llvm)
          cmake -G Ninja -S . -B build/ci \
            -DCMAKE_BUILD_TYPE=Debug \
            -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \
            -DLLVM_DIR="$LLVM_PREFIX/lib/cmake/llvm" \
            -DClang_DIR="$LLVM_PREFIX/lib/cmake/clang"

      - name: Build
        run: cmake --build build/ci -j 2

      - name: Test
        run: ctest --test-dir build/ci --output-on-failure -j 2

  build-test-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup CMake
        uses: actions/setup-cmake@v3
        with:
          cmake-version: '3.31.x'

      - name: Setup LLVM (20)
        uses: llvm/actions/setup-llvm@v1
        with:
          version: '20'

      - name: Install Ninja (Chocolatey)
        shell: powershell
        run: |
          choco install -y ninja

      - name: Setup vcpkg (manifest mode)
        uses: microsoft/setup-vcpkg@v1
        with:
          vcpkgDirectory: '${{ runner.temp }}/vcpkg'
          runVcpkgInstall: false
          appendedCacheKey: windows

      - name: Configure (Release, LLVM + vcpkg; tests enabled)
        shell: bash
        run: |
          cmake -G Ninja -S . -B build/ci \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \
            -DCMAKE_TOOLCHAIN_FILE="${VCPKG_ROOT}/scripts/buildsystems/vcpkg.cmake" \
            -DVCPKG_FEATURE_FLAGS=manifests,versions \
            -DLLVM_DIR="$LLVM_PATH/lib/cmake/llvm" \
            -DClang_DIR="$LLVM_PATH/lib/cmake/clang"

      - name: Build
        shell: bash
        run: cmake --build build/ci -j 2

      - name: Test
        shell: bash
        run: ctest --test-dir build/ci --output-on-failure -j 2
